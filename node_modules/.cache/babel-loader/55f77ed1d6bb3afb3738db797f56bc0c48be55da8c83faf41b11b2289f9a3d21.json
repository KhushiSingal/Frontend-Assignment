{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khushi Singal\\\\json-form-generator\\\\src\\\\components\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\nimport Fab from '@mui/material/Fab';\nimport InfoIcon from '@mui/icons-material/Info';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\nimport Divider from '@mui/material/Divider';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport InputField from \"./InputField\";\nimport SelectField from \"./SelectField\";\nimport SwitchField from \"./SwitchField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  const [input, updateInput] = React.useState(\"\");\n  const [uiSchema, updateSchema] = React.useState(\"\");\n  // const [clicked, updateClicked] = React.useState(false);\n\n  function changeInput(event) {\n    const text = event.target.value;\n    updateInput(text);\n  }\n  function getUISchema() {\n    updateSchema(input);\n    // updateInput(\"\");\n  }\n  function invalidInput() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter Valid Input!!!!!!!!!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this);\n  }\n  function isJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  function divideAndRender(jsSchema) {\n    var required = [];\n    var additional = [];\n    required = jsSchema.filter(field => {\n      const {\n        validate: {\n          required = false\n        }\n      } = field;\n      return required;\n    });\n    additional = jsSchema.filter(field => {\n      const {\n        validate: {\n          required = false\n        }\n      } = field;\n      return !required;\n    });\n    var requiredRendering = renderForm(required);\n    console.log(requiredRendering);\n  }\n  function renderForm(jsSchema) {\n    return jsSchema.map((field, index) => {\n      const {\n        sort,\n        label,\n        description,\n        validate,\n        jsonKey,\n        uiType,\n        icon,\n        level,\n        placeholder\n      } = field;\n      switch (uiType) {\n        case \"Input\":\n          console.log(\"Input Switch Case\");\n          return /*#__PURE__*/_jsxDEV(InputField, {\n            label: label,\n            description: description,\n            validate: validate,\n            icon: icon,\n            placeholder: placeholder\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 32\n          }, this);\n        case \"Select\":\n          console.log(\"Select Switch Case\");\n          return /*#__PURE__*/_jsxDEV(SelectField, {\n            label: label,\n            description: description,\n            validate: validate,\n            icon: icon,\n            placeholder: placeholder\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 32\n          }, this);\n        case \"Switch\":\n          console.log(\"Switch Switch Case\");\n          return /*#__PURE__*/_jsxDEV(SwitchField, {\n            label: label,\n            description: description,\n            validate: validate,\n            icon: icon,\n            placeholder: placeholder\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 32\n          }, this);\n        default:\n          return invalidInput();\n      }\n    });\n  }\n  function generateFields(jsonSchema) {\n    if (isJsonString(jsonSchema)) {\n      const jsSchema = JSON.parse(jsonSchema);\n      return divideAndRender(jsSchema);\n    } else {\n      console.log(\"Enter a valid input!\");\n      return;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-multiline-flexible fullWidth margin-dense\",\n          label: \"UI Schema\",\n          onChange: changeInput,\n          value: input,\n          margin: \"dense\",\n          fullWidth: true,\n          multiline: true,\n          maxRows: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"generator\",\n          onClick: getUISchema,\n          variant: \"contained\",\n          size: \"small\",\n          children: \"Generate Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"output\",\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [generateFields(uiSchema), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"generator\",\n          variant: \"contained\",\n          size: \"small\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"pZm1PJRVLFBjO+PuwavuLOIJxvc=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","Button","TextField","styled","Typography","Fab","InfoIcon","Tooltip","TooltipProps","tooltipClasses","Divider","Select","SelectChangeEvent","InputLabel","MenuItem","InputField","SelectField","SwitchField","jsxDEV","_jsxDEV","Input","_s","input","updateInput","useState","uiSchema","updateSchema","changeInput","event","text","target","value","getUISchema","invalidInput","children","fileName","_jsxFileName","lineNumber","columnNumber","isJsonString","str","JSON","parse","e","divideAndRender","jsSchema","required","additional","filter","field","validate","requiredRendering","renderForm","console","log","map","index","sort","label","description","jsonKey","uiType","icon","level","placeholder","generateFields","jsonSchema","className","id","onChange","margin","fullWidth","multiline","maxRows","onClick","variant","size","_c","$RefreshReg$"],"sources":["C:/Users/Khushi Singal/json-form-generator/src/components/Input.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport { styled } from '@mui/material/styles';\r\nimport Typography from '@mui/material/Typography';\r\nimport Fab from '@mui/material/Fab';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\r\nimport Divider from '@mui/material/Divider';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport InputField from \"./InputField\";\r\nimport SelectField from \"./SelectField\";\r\nimport SwitchField from \"./SwitchField\";\r\n\r\nfunction Input(){\r\n    const [input, updateInput] = React.useState(\"\");\r\n    const [uiSchema, updateSchema] = React.useState(\"\");\r\n    // const [clicked, updateClicked] = React.useState(false);\r\n\r\n    function changeInput(event){\r\n        const text = event.target.value;\r\n        updateInput(text);\r\n    }\r\n\r\n    function getUISchema(){\r\n        updateSchema(input);\r\n        // updateInput(\"\");\r\n    }\r\n\r\n    \r\n\r\n    function invalidInput(){\r\n        return (<h1>Enter Valid Input!!!!!!!!!!!</h1>);\r\n    }\r\n\r\n    function isJsonString(str) {\r\n        try {\r\n            JSON.parse(str);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function divideAndRender(jsSchema){\r\n        var required = [];\r\n        var additional = [];\r\n        required = jsSchema.filter(field => {\r\n            const {validate: {required = false}} = field;\r\n            return required;\r\n        });\r\n        additional = jsSchema.filter(field =>{\r\n            const {validate: {required = false}} = field;\r\n            return !required;\r\n        })\r\n        var requiredRendering = renderForm(required);\r\n        console.log(requiredRendering);\r\n    }\r\n\r\n    function renderForm(jsSchema){\r\n        return (\r\n            jsSchema.map((field, index) => {\r\n                const {sort, label, description, validate, jsonKey, uiType, icon, level, placeholder} = field;\r\n                switch(uiType){\r\n                    case \"Input\":\r\n                        console.log(\"Input Switch Case\");\r\n                        return <InputField key={index} label={label} description={description} validate={validate} icon={icon} placeholder={placeholder} />;\r\n                    \r\n                    case \"Select\":\r\n                        console.log(\"Select Switch Case\");\r\n                        return <SelectField key={index} label={label} description={description} validate={validate} icon={icon} placeholder={placeholder} />;   \r\n                    \r\n                    case \"Switch\":\r\n                        console.log(\"Switch Switch Case\");\r\n                        return <SwitchField key={index} label={label} description={description} validate={validate} icon={icon} placeholder={placeholder} />;\r\n\r\n                    default:\r\n                        return invalidInput();\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    function generateFields(jsonSchema){\r\n        if(isJsonString(jsonSchema)){\r\n            const jsSchema = JSON.parse(jsonSchema);\r\n            return divideAndRender(jsSchema);\r\n        } else {\r\n            console.log(\"Enter a valid input!\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n    <div className=\"container\">\r\n    <div className=\"section\">\r\n        <form>\r\n            <TextField\r\n              id=\"outlined-multiline-flexible fullWidth margin-dense\"\r\n              label=\"UI Schema\"\r\n              onChange={changeInput}\r\n              value={input}\r\n              margin=\"dense\"\r\n              fullWidth\r\n              multiline\r\n              maxRows={15}\r\n            />\r\n            <Button id=\"generator\" onClick={getUISchema} variant=\"contained\" size=\"small\">Generate Form</Button>\r\n        </form>\r\n    </div>\r\n    <div id=\"output\" className=\"section\">\r\n        <form>\r\n            {generateFields(uiSchema)}\r\n            <Button id=\"generator\" variant=\"contained\" size=\"small\">Submit</Button>\r\n        </form>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Input;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}