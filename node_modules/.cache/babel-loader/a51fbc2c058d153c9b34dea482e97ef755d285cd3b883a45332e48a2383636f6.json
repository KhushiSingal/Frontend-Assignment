{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Khushi Singal\\\\json-form-generator\\\\src\\\\components\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Input() {\n  _s();\n  const [input, updateInput] = React.useState(\"\");\n  const [uiSchema, updateSchema] = React.useState(\"\");\n  // const [clicked, updateClicked] = React.useState(false);\n\n  function changeInput(event) {\n    const text = event.target.value;\n    updateInput(text);\n  }\n  function getUISchema() {\n    updateSchema(input);\n    updateInput(\"\");\n  }\n  function generateInput(sort, label, description, validate, jsonKey, icon, level, placeholder) {\n    const {\n      required,\n      immutable\n    } = validate;\n    placeholder = !placeholder ? \"Enter \" + label : placeholder;\n    const describe = !description ? false : true;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formField\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label\",\n        children: [label, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: required ? \"*  \" : \"  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), describe ? /*#__PURE__*/_jsxDEV(Fab, {\n        className: \"infoCircle\",\n        color: \"primary\",\n        \"aria-label\": \"add\",\n        children: /*#__PURE__*/_jsxDEV(AddIcon, {\n          className: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 92\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputField\",\n        type: \"text\",\n        required: required,\n        placeholder: placeholder,\n        readOnly: immutable\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n  function invalidInput() {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Enter Valid Input!!!!!!!!!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this);\n  }\n  function isJsonString(str) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  function generateFields(jsonSchema) {\n    if (isJsonString(jsonSchema)) {\n      const jsSchema = JSON.parse(jsonSchema);\n      return jsSchema.map((field, index) => {\n        const {\n          sort,\n          label,\n          description,\n          validate,\n          jsonKey,\n          uiType,\n          icon,\n          level,\n          placeholder\n        } = field;\n        switch (uiType) {\n          case \"Input\":\n            console.log(\"Input Switch Case\");\n            return generateInput(sort, label, description, validate, jsonKey, uiType, icon, level, placeholder);\n          default:\n            return invalidInput();\n        }\n      });\n    } else {\n      console.log(\"Enter a valid input!\");\n      return;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-multiline-flexible fullWidth margin-dense\",\n          label: \"UI Schema\",\n          onChange: changeInput,\n          value: input,\n          margin: \"dense\",\n          fullWidth: true,\n          multiline: true,\n          maxRows: 14\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"generator\",\n          onClick: getUISchema,\n          variant: \"contained\",\n          size: \"small\",\n          children: \"Generate Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"output\",\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [generateFields(uiSchema), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"generator\",\n          variant: \"contained\",\n          size: \"small\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Input, \"pZm1PJRVLFBjO+PuwavuLOIJxvc=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","Button","TextField","Fab","AddIcon","jsxDEV","_jsxDEV","Input","_s","input","updateInput","useState","uiSchema","updateSchema","changeInput","event","text","target","value","getUISchema","generateInput","sort","label","description","validate","jsonKey","icon","level","placeholder","required","immutable","describe","className","children","fileName","_jsxFileName","lineNumber","columnNumber","color","type","readOnly","invalidInput","isJsonString","str","JSON","parse","e","generateFields","jsonSchema","jsSchema","map","field","index","uiType","console","log","id","onChange","margin","fullWidth","multiline","maxRows","onClick","variant","size","_c","$RefreshReg$"],"sources":["C:/Users/Khushi Singal/json-form-generator/src/components/Input.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nfunction Input(){\r\n    const [input, updateInput] = React.useState(\"\");\r\n    const [uiSchema, updateSchema] = React.useState(\"\");\r\n    // const [clicked, updateClicked] = React.useState(false);\r\n\r\n    function changeInput(event){\r\n        const text = event.target.value;\r\n        updateInput(text);\r\n    }\r\n\r\n    function getUISchema(){\r\n        updateSchema(input);\r\n        updateInput(\"\");\r\n    }\r\n    \r\n    function generateInput(sort, label, description, validate, jsonKey, icon, level, placeholder){\r\n        const {required, immutable} = validate;\r\n        placeholder = (!placeholder) ? (\"Enter \" + label) : placeholder;\r\n        const describe = (!description) ? false : true;\r\n        return ( \r\n            <div className=\"formField\">\r\n                <span className=\"label\">{label}\r\n                    <span className=\"required\">{(required?\"*  \":\"  \")}</span>\r\n                </span>\r\n                {(describe) ? <Fab className=\"infoCircle\" color=\"primary\" aria-label=\"add\"><AddIcon className=\"info\"/></Fab> : null}\r\n                <input className=\"inputField\" type=\"text\" required={required} \r\n                placeholder={placeholder} readOnly={immutable}></input>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    function invalidInput(){\r\n        return (<h1>Enter Valid Input!!!!!!!!!!!</h1>);\r\n    }\r\n\r\n    function isJsonString(str) {\r\n        try {\r\n            JSON.parse(str);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function generateFields(jsonSchema){\r\n        if(isJsonString(jsonSchema)){\r\n            const jsSchema = JSON.parse(jsonSchema);\r\n            \r\n            return (\r\n                jsSchema.map((field, index) => {\r\n                    const {sort, label, description, validate, jsonKey, uiType, icon, level, placeholder} = field;\r\n                    switch(uiType){\r\n                        case \"Input\":\r\n                            console.log(\"Input Switch Case\");\r\n                            return generateInput(sort, label, description, validate, jsonKey, uiType, icon, level, placeholder);\r\n                            \r\n                        default:\r\n                            return invalidInput();\r\n                    }\r\n                })\r\n            );\r\n        } else {\r\n            console.log(\"Enter a valid input!\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n    <div className=\"container\">\r\n    <div className=\"section\">\r\n        <form>\r\n            <TextField\r\n              id=\"outlined-multiline-flexible fullWidth margin-dense\"\r\n              label=\"UI Schema\"\r\n              onChange={changeInput}\r\n              value={input}\r\n              margin=\"dense\"\r\n              fullWidth\r\n              multiline\r\n              maxRows={14}\r\n            />\r\n            <Button id=\"generator\" onClick={getUISchema} variant=\"contained\" size=\"small\">Generate Form</Button>\r\n        </form>\r\n    </div>\r\n    <div id=\"output\" className=\"section\">\r\n        <form>\r\n            {generateFields(uiSchema)}\r\n            <Button id=\"generator\" variant=\"contained\" size=\"small\">Submit</Button>\r\n        </form>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Input;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}